// <auto-generated />
using System;
using Carpool.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Carpool.Server.Migrations
{
    [DbContext(typeof(CarpoolDbContext))]
    partial class CarpoolDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Carpool.Shared.DriverProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AutoBildUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parkbereich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Plaetze")
                        .HasColumnType("int");

                    b.Property<decimal>("Preis")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Route")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("DriverProfiles");
                });

            modelBuilder.Entity("Carpool.Shared.TimeSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DriverProfileId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Endzeit")
                        .HasColumnType("time");

                    b.Property<bool>("Hinreise")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("Startzeit")
                        .HasColumnType("time");

                    b.Property<int>("Wochentag")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DriverProfileId");

                    b.ToTable("TimeSlot");
                });

            modelBuilder.Entity("Carpool.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Jahrgang")
                        .HasColumnType("int");

                    b.Property<string>("Klasse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefonnummer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Carpool.Shared.TimeSlot", b =>
                {
                    b.HasOne("Carpool.Shared.DriverProfile", "DriverProfile")
                        .WithMany("Zeitfenster")
                        .HasForeignKey("DriverProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DriverProfile");
                });

            modelBuilder.Entity("Carpool.Shared.DriverProfile", b =>
                {
                    b.Navigation("Zeitfenster");
                });
#pragma warning restore 612, 618
        }
    }
}
